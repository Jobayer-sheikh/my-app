# Builder stage
FROM composer:2 AS builder

WORKDIR /app
COPY . .
RUN composer install --no-dev --optimize-autoloader --ignore-platform-reqs

# Production stage
FROM php:8.2-fpm-alpine

# Install dependencies
RUN apk add --no-cache \
    nginx \
    supervisor \
    libpng-dev \
    libjpeg-turbo-dev \
    freetype-dev \
    libzip-dev \
    libxml2-dev \
    zip \
    unzip

# Configure PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg && \
    docker-php-ext-install -j$(nproc) \
    gd \
    pdo \
    pdo_mysql \
    zip \
    opcache \
    exif \
    pcntl

# Create required directories
RUN mkdir -p /run/nginx && \
    mkdir -p /var/log/nginx && \
    mkdir -p /var/log/supervisor && \
    touch /var/log/nginx/access.log && \
    touch /var/log/nginx/error.log

# Copy configurations
COPY docker/nginx.prod/nginx.conf /etc/nginx/nginx.conf
COPY docker/nginx.prod/default.conf /etc/nginx/conf.d/default.conf
COPY docker/supervisor/supervisord.conf /etc/supervisor/supervisord.conf

# Copy application
COPY --from=builder /app /var/www/html
WORKDIR /var/www/html

# Set permissions
RUN chown -R www-data:www-data \
    /var/www/html \
    /var/log/nginx \
    /run/nginx && \
    chmod -R 775 /var/www/html/storage && \
    chmod -R 775 /var/www/html/bootstrap/cache

# Environment
ENV APP_ENV=production
ENV APP_DEBUG=false

EXPOSE 80

CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]